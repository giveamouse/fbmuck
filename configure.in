dnl
dnl Process this file with autoconf to produce a configure script.
dnl
dnl TinyMUCK fb5.x auto-config script writen by: Peter "WhiteFire" Torkelson
dnl Revised for fb6.x by revar@belfry.com
dnl
AC_REVISION($Revision$)dnl
AC_INIT(src/game.c)
AC_CONFIG_HEADER(include/autoconf.h)
echo " "
echo "TinyMUCK fb6.x auto-configure script."
echo " "
echo "This script will try and determine things about your system so"
echo "that FB can compile correctly. This will create your Makefile"
echo "and the header file autoconf.h in the include directory."
echo " "

dnl
dnl Find the compiler first.
dnl
AC_PROG_CC
AC_PROG_CPP
dnl AC_PROG_CXX for finding the C++ compiler.

dnl
dnl Specific systems tests.
dnl
AC_ISC_POSIX
AC_MINIX

AC_ARG_WITH(ssl,
[  --with-ssl[=ssltop_path]   use ssl encryption and authorization],
[
if test "$withval" = yes; then
	SSLTOP=
else
	SSLTOP=$withval
fi

found_sslh="0"
if test "$SSLTOP" = ""; then
	AC_CHECK_HEADERS(ssl.h ssl/ssl.h openssl/ssl.h,found_sslh="1")
else
	oldinc=$INC
	INC="-I$SSLTOP $oldinc"
	AC_CHECK_HEADERS($SSLTOP/ssl.h,
		AC_DEFINE(HAVE_SSL_H)
		found_sslh="1"
	)
	if test "$found_sslh" = "0"; then
		INC="-I$SSLTOP/include $oldinc"
		AC_CHECK_HEADERS($SSLTOP/include/ssl.h,
			AC_DEFINE(HAVE_SSL_H)
			found_sslh="1"
		)
	fi
	if test "$found_sslh" = "0"; then
		INC="-I$SSLTOP/include $oldinc"
		AC_CHECK_HEADERS($SSLTOP/include/ssl/ssl.h,
			AC_DEFINE(HAVE_SSL_SSL_H)
			found_sslh="1"
		)
	fi
	if test "$found_sslh" = "0"; then
		INC="-I$SSLTOP/include $oldinc"
		AC_CHECK_HEADERS($SSLTOP/include/openssl/ssl.h,
			AC_DEFINE(HAVE_OPENSSL_SSL_H)
			found_sslh="1"
		)
	fi
fi
if test "$found_sslh" = "0"; then
	AC_MSG_ERROR([cannot locate ssl.h header file.])
fi

found_ssl_lib="0"
if test "$SSLTOP" = ""; then
	AC_TRY_LINK_FUNC(SSL_accept, found_ssl_lib="1")
	AC_CHECK_LIB(ssl, SSL_accept,
		LIBS="-lssl -lcrypto $LIBS"
		found_ssl_lib="1"
	)
else
	LIBS="-L$SSLTOP/lib -lssl -lcrypto $LIBS"
	AC_CHECK_LIB(ssl, SSL_accept, found_ssl_lib="1")
fi
if test "$found_ssl_lib" = "0"; then
	AC_MSG_ERROR([cannot locate libssl library.])
fi

AC_DEFINE(USE_SSL)
AC_SUBST(DEFS)
AC_SUBST(INC)
AC_SUBST(SSLTOP)
])

AC_ARG_WITH(lint,
[  --with-lint[=lint_path]    use lint at lint_path, defaults to splint],
[AC_DEFINE(LINT)
if test "$withval" = yes; then
  LINT=splint
else
  LINT=$withval
fi
AC_DEFINE(WITH_LINT)
AC_SUBST(LINT)
])

AC_ARG_ENABLE(memprof,
[  --enable-memprof           enable memory leak detection and profiling (slow)],
[
if test "$enableval" = yes; then
	AC_DEFINE(MALLOC_PROFILING)
else
	if test "$enableval" = debug; then
		AC_DEFINE(MALLOC_PROFILING)
		AC_DEFINE(CRT_DEBUG_ALSO)
	fi
fi
])


AC_ARG_ENABLE(ipv6,
[  --enable-ipv6              use IPv6 instead of IPv4 for network connections],
[
if test "$enableval" = yes; then
	AC_DEFINE(USE_IPV6)

	found_ipv6_h="0"
	AC_CHECK_HEADERS(in6.h,
		AC_DEFINE(HAVE_IN6_H)
		found_ipv6_h="1"
	)
	AC_CHECK_HEADERS(linux/in6.h,
		AC_DEFINE(HAVE_LINUX_IN6_H)
		found_ipv6_h="1"
	)
	AC_CHECK_HEADERS(netinet6/in6.h,
		AC_DEFINE(HAVE_NETINET6_IN6_H)
		found_ipv6_h="1"
	)
	if test "$found_ipv6_h" = "0"; then
		AC_MSG_ERROR([cannot locate in6.h header file.])
	fi

	found_ipv6_lib="0"
	AC_CHECK_LIB(resolv, bind,
		LIBS="-lresolv $LIBS"
		found_ipv6_lib="1"
	)
	if test "$found_ipv6_lib" = "0"; then
		AC_MSG_ERROR([cannot locate libresolv library.])
	fi
fi
])


dnl
dnl Header files
dnl
AC_CHECK_HEADERS(malloc.h memory.h string.h unistd.h sys/resource.h sys/signal.h)
AC_CHECK_HEADERS(sys/time.h timebits.h)
AC_CHECK_HEADERS(varargs.h stdarg.h)
AC_HEADER_STDC
AC_HEADER_DIRENT
AC_HEADER_TIME
AC_CHECK_HEADERS(errno.h sys/errno.h)

echo -n "checking for tm_gmtoff..."
found_gmt_offset=0
AC_EGREP_HEADER(\<tm_gmtoff[[ 	]]*;, time.h,
	AC_DEFINE(HAVE_TM_GMTOFF)
	found_gmt_offset=1
	echo -n " time.h"
)
AC_EGREP_HEADER(\<tm_gmtoff[[ 	]]*;, sys/time.h,
	AC_DEFINE(HAVE_SYS_TM_GMTOFF)
	found_gmt_offset=1
	echo -n " sys/time.h"
)
AC_EGREP_HEADER(\<_timezone\>, time.h,
	AC_DEFINE(HAVE__TIMEZONE)
	found_gmt_offset=1
	echo -n " _timezone"
)
if test "$found_gmt_offset" = "0"; then
	echo "not found."
else
	echo ""
fi


dnl
dnl Libraries and functions.
dnl
AC_CHECK_LIB(m, cos)
AC_CHECK_LIB(socket, shutdown)
AC_CHECK_LIB(nsl, gethostbyname)
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(mallinfo getrlimit getrusage random snprintf vsnprintf)
AC_EGREP_HEADER([[^_a-zA-Z]]hblks;, malloc.h, AC_DEFINE(HAVE_MALLINFO_HBLKS))
AC_EGREP_HEADER([[^_a-zA-Z]]keepcost;, malloc.h, AC_DEFINE(HAVE_MALLINFO_KEEPCOST))
AC_EGREP_HEADER([[^_a-zA-Z]]treeoverhead;, malloc.h, AC_DEFINE(HAVE_MALLINFO_TREEOVERHEAD))
AC_EGREP_HEADER([[^_a-zA-Z]]grain;, malloc.h, AC_DEFINE(HAVE_MALLINFO_GRAIN))
AC_EGREP_HEADER([[^_a-zA-Z]]allocated;, malloc.h, AC_DEFINE(HAVE_MALLINFO_ALLOCATED))

dnl
dnl Types and structures
dnl
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_TYPE_SIGNAL
AC_STRUCT_TIMEZONE

dnl
dnl Check if socklen_t is defined in sys/socker.h.
dnl
AC_DEFUN([TYPE_SOCKLEN_T],
[AC_CACHE_CHECK([for socklen_t], ac_cv_type_socklen_t,
[
  AC_TRY_COMPILE(
    [#include <sys/types.h>
     #include <sys/socket.h>],
    [socklen_t len = 42; return 0;],
    ac_cv_type_socklen_t=yes,
    ac_cv_type_socklen_t=no)
  ])
  if test $ac_cv_type_socklen_t != yes; then
    AC_DEFINE(socklen_t, int)
  fi
])
TYPE_SOCKLEN_T

dnl
dnl Compiler characteristics
dnl
AC_C_CONST
AC_C_INLINE
AC_C_LONG_DOUBLE

dnl
dnl Uname -a, just because.
dnl
echo "checking value of uname -a"
AC_DEFINE_UNQUOTED(UNAME_VALUE, "`uname -a`")

dnl
dnl And in the end, there was no more.
dnl
AC_OUTPUT(
	Makefile
	src/Makefile
	game/restart
)
echo " "
echo "You should review the options in include/config.h, and"
echo "then type make to build your system."
echo " "
