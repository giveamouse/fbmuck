#!/bin/make -f
# $Header$

# #######################################################################
#                  Makefile for TinyMUCK 2.2fb5.x
# #######################################################################

# #######################################################################
#			User tunable options
# #######################################################################

#
# Prepend line.  used for compiling with things like nice.
#
# PRE= nice -10

#
# Optimizations
# -O			General optimizations, recomended.
# -O2			Heavier optimizations, use at own risk.
# -g			Generate debugging information, suggested, you can
#			alwase "strip netmuck" if you want the space.
# -Wall -pedantic	Good way to get spammed with warnings from GCC.
#
OPTIM= -O -g

#
# Paths
#

# Right below the src/include directories
ROOT= ..

# Where the include files are
INCLUDE= ${ROOT}/include

# Destination for binaries
DEST=${ROOT}/game

# #######################################################################
# 		Variables set by the configure script.
# #######################################################################
CC=@CC@
CPP=@CPP@
DEFS=@DEFS@
LIBR=@LIBS@

# #######################################################################
#  	   Usualy don't need to change anything past here.
# #######################################################################

#
# Include path, Cflags...
#
CFLAGS= ${OPTIM} ${DEFS} -I${INCLUDE}

#
# for saving old copies.
#
MV= -mv -f
RM= -rm -f

#
# Misc stuff for odd targets.
#
SRC_PREFIX=
MKDEPEND= makedepend
MAKE= make
LINT= lint
MKTAGS= ctags
# for RCS only
GET= co
CLEAN= rcsclean
LINTFLAGS= -I${INCLUDE}

##########################################################################
#            You should not have to change anything below here           #
##########################################################################

ANNSRC= announce.c

MISCSRC= Makefile ChangeLog COPYING mkversion.sh

CSRC= array.c boolexp.c compile.c compress.c create.c db.c \
	debugger.c disassem.c diskprop.c edit.c events.c game.c hashtab.c \
	help.c inst.c interp.c log.c look.c match.c mcp.c mcpgui.c mcppkgs.c mfuns.c \
	mfuns2.c msgparse.c move.c mufevent.c crt_malloc.c oldcompress.c player.c \
	predicates.c p_array.c p_connects.c p_db.c p_error.c p_float.c \
	p_math.c p_mcp.c p_misc.c p_props.c p_stack.c p_strings.c property.c \
	propdirs.c props.c random.c rob.c rwho.c sanity.c set.c signal.c \
	smatch.c speech.c strftime.c stringutil.c timequeue.c timestamp.c \
	tune.c unparse.c utils.c wiz.c

LSRC= copyright.c
MSRC= olddecomp.c reconst.c interface.c

SRC= ${MISCSRC} ${CSRC} ${LSRC} ${MSRC}


COBJ= array.o boolexp.o compile.o compress.o create.o db.o \
	debugger.o disassem.o diskprop.o edit.o events.o game.o hashtab.o \
	help.o inst.o interp.o log.o look.o match.o mcp.o mcpgui.o mcppkgs.o mfuns.o \
	mfuns2.o msgparse.o move.o mufevent.o crt_malloc.o oldcompress.o player.o \
	predicates.o p_array.o p_connects.o p_db.o p_error.o p_float.o \
	p_math.o p_mcp.o p_misc.o p_props.o p_stack.o p_strings.o property.o \
	propdirs.o props.o random.o rob.o rwho.o sanity.o signal.o set.o \
	smatch.o speech.o strftime.o stringutil.o timequeue.o timestamp.o \
	tune.o unparse.o utils.o wiz.o

LOBJ= copyright.o
MOBJ= olddecomp.o sanity.o reconst.o interface.o resolver.o topwords.o
EOBJ= oldcompress.o diskprop.o property.o propdirs.o props.o stringutil.o \
	unparse.o utils.o predicates.o db.o boolexp.o log.o

OBJ= ${COBJ} ${ROBJ} ${LOBJ} ${MOBJ}
TARGETS= netmuck resolver olddecompress topwords announce
OLDTARGETS = netmuck~ resolver~ olddecompress~ topwords~ announce~

.c.o:
	${PRE} ${CC} ${CFLAGS} -c $*.c

.c.cpp:
	${PRE} ${CPP} ${CFLAGS} -c $*.c -o $*.cpp

all:    ${TARGETS} 

netmuck:        ${P} ${COBJ} interface.o ${LOBJ} mkversion.sh
	sh mkversion.sh
	${PRE} ${CC} ${CFLAGS} -c version.c
	${MV} netmuck netmuck~
	${PRE} ${CC} ${CFLAGS} -o netmuck ${COBJ} interface.o version.o \
	 ${LIBR} ${LOBJ}

resolver:	resolver.o ${LOBJ}
	${PRE} ${CC} ${CFLAGS} -o resolver resolver.o ${LIBR} ${LOBJ}

extract: ${P} extract.o ${EOBJ} ${LOBJ}
	 ${RM} extract
	 ${CC} ${CFLAGS} -o extract ${EOBJ} extract.o ${LOBJ}

topwords: topwords.o hashtab.o
	${RM} topwords
	${CC} ${CFLAGS} -o topwords topwords.o hashtab.o

olddecompress: olddecomp.o oldcompress.o ${LOBJ}
	${RM} olddecompress
	${CC} ${CFLAGS} -o olddecompress olddecomp.o oldcompress.o ${LOBJ}

#############################################################
# Funky stuff for debugging and coding work.
#

saber_src:
	#load ${CFLAGS} ${CSRC}

saber_obj: ${CSRC} interface.o
	#load ${OBJ} interface.o

tags: ${CSRC} ${MSRC}
	${MKTAGS} ${CSRC} interface.c ../include/*.h

lint: ${CSRC} ${MSRC}
	${RM} netmuck.lint
	${LINT} ${LINTFLAGS} ${CSRC} ${MSRC} > netmuck.lint

${SRC}:
	${GET} $@

sources: ${SRC}

names:
	@for i in ${SRC}; do echo ${SRC_PREFIX}$$i; done

depend:
	${MKDEPEND} -- ${CFLAGS} -- ${CSRC} ${MSRC} ${LSRC}
	echo chmod -w Makefile
	chmod -w Makefile


########################################################
# Cleanup stuff.
#

clean:
	${RM} ${OBJ} core version.o ${LOBJ} ${SOBJ} resolver.o ${TARGETS} ${OLDTARGETS}

cleaner: clean
	${RM} Makefile config.status config.cache config.log ${INCLUDE}/autoconf.h ${TARGETS} version.c prochelp
	cp Makefile.cfg Makefile

clobber: cleaner
	${RM} tags *~ *.bak *.orig

nuke:
	${RM} ${OBJ} core version.o
	${RM} ${TARGETS} tags *~ *.bak *.orig *.cpp
	${RM} Makefile config.status ${INCLUDE}/autoconf.h
	cp Makefile.cfg Makefile
	-${CLEAN} *

install: all
	${MV} ${TARGETS} ${DEST}

# #######################################################################
# #######################################################################

# DO NOT DELETE THIS LINE -- make depend depends on it.
